name: .NET Core Desktop

on:
  push:
    branches: [ "main-Production-Environment" ]
  pull_request:
    branches: [ "main-Production-Environment" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: "Testing_Integration_Environment/SmartPacifier - TestingFramework/SmartPacifier - TestingFramework.sln"
      Test_Project_Path: "Testing_Integration_Environment/SmartPacifier - TestingFramework/SmartPacifier - TestingFramework/SmartPacifier - TestingFramework.csproj"

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # Debug step: List all contents of the repository
    - name: List all repository contents
      run: dir /S /B
      shell: cmd

    # Confirm the solution path exists
    - name: Confirm solution file path
      run: |
        if (Test-Path "${{ env.Solution_Name }}) { 
          Write-Output "Solution file found." 
        } else { 
          Write-Output "Solution file NOT found at ${{ env.Solution_Name }}."
        }
      shell: pwsh

    # Confirm the test project path exists
    - name: Confirm test project file path
      run: |
        if (Test-Path "${{ env.Test_Project_Path }}) { 
          Write-Output "Test project file found." 
        } else { 
          Write-Output "Test project file NOT found at ${{ env.Test_Project_Path }}."
        }
      shell: pwsh

    # Run dotnet test for the solution
    - name: Execute all tests in the solution
      run: dotnet test "${{ env.Solution_Name }}" --configuration ${{ matrix.configuration }} --no-build --verbosity normal

    # Execute unit tests in Main_UnitTests class
    - name: Execute unit tests in Main_UnitTests class
      run: dotnet test "${{ env.Test_Project_Path }}" --configuration ${{ matrix.configuration }} --no-build --verbosity normal --filter "FullyQualifiedName~SmartPacifier___TestingFramework.Main_UnitTests"

    - name: Restore the application
      run: msbuild "${{ env.Solution_Name }}" /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
